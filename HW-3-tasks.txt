ДЗ_3 Postman
============

// 1) необходимо залогиниться
// POST baseURL/login
// login : str (кроме /)
// password : str

// Приходящий токен необходимо передать во все остальные запросы.

// на вкладке Tests запроса ".../login" устанавливаем переменную окружения:
--> let jsonData = pm.response.json();     // Парсим респонс
--> pm.environment.set("token", jsonData.token);  //устанавливаем переменную окружения "token" и присваиваем ей значение из response = jsonData.token;
// проверяем, что в окружении появилась переменная с названием "token" и соответствующим значением

===================
дальше все запросы требуют наличие токена.
=======================================================================

// 2) baseURL/user_info
// req. (RAW JSON)
// POST
// age: int
// salary: int
// name: str
// auth_token


// resp.
// {'start_qa_salary':salary,
//  'qa_salary_after_6_months': salary * 2,
//  'qa_salary_after_12_months': salary * 2.9,
//  'person': {'u_name':[user_name, salary, age],
//                                 'u_age':age,
//                                 'u_salary_1.5_year': salary * 4}
//                                 }


// Тесты:
// 1) Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});

// 2) Проверка структуры json в ответе.
		
var schema = {
"type": "object",
  "properties": {
    "person": {
      "type": "object",
      "properties": {
        "u_age": {
          "type": "integer"
        },
        "u_name": {
          "type": "array",
          "items": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "integer"
            }
          ]
        },
        "u_salary_1_5_year": {
          "type": "integer"
        }
      },
      "required": [
        "u_age",
        "u_name",
        "u_salary_1_5_year"
      ]
    },
    "qa_salary_after_12_months": {
      "type": "number"
    },
    "qa_salary_after_6_months": {
      "type": "integer"
    },
    "start_qa_salary": {
      "type": "integer"
    }
  },
  "required": [
    "person",
    "qa_salary_after_12_months",
    "qa_salary_after_6_months",
    "start_qa_salary"
  ]
};

var data1 = {
    "person": {
        "u_age": 35,
        "u_name": [
            "Ivan",
            5000,
            35
        ],
        "u_salary_1_5_year": 20000
    },
    "qa_salary_after_12_months": 14500.0,
    "qa_salary_after_6_months": 10000,
    "start_qa_salary": 5000
};

pm.test('Schema is valid', function () {
    pm.expect(tv4.validate(data1, schema)).to.be.true;
});

pm.test("Schema is OK", () => {
    pm.response.to.have.jsonSchema(schema1);
});


// 3) В ответе указаны коэффициенты умножения salary, напишите тесты по проверке 
// правильности результата перемножения на коэффициент.

// Парсим response
let jsonRespData = pm.response.json();           
// let jsonRespData = JSON.parse(responseBody);  === 2nd way to parse response data

// Парсим request из request-body raw
let jsonReqData = JSON.parse(pm.request.body.raw);

// Тесты по проверке правильности перемножения:
pm.test("Check salary after_6_months", function () {
    pm.expect(jsonRespData.qa_salary_after_6_months).to.eql(jsonReqData.salary*2);
});

pm.test("Check salary after_12_months", function () {
    pm.expect(jsonRespData.qa_salary_after_12_months).to.eql(jsonReqData.salary*2.9);
});

pm.test("Check u_salary_1_5_year", function () {
    pm.expect(jsonRespData.person.u_salary_1_5_year).to.eql(jsonReqData.salary*4);
});


// 4) Достать значение из поля 'u_salary_1.5_year' и передать в поле salary запроса baseURL/get_test_user
pm.environment.set("1_5_year_salary", jsonRespData.person.u_salary_1_5_year);  //устанавливаем переменную окружения;
// - проверяем, что в окружении появилась переменная с названием 1_5_year_salary и соответствующим значением
// - в поле salary запроса ".../get_test_user" вводим {{1_5_year_salary}}

